#!/usr/bin/env python
#****************************************************************
#  File: configure.py
#
# Copyright (c) 2015, Georgia Tech Research Institute
# All rights reserved.
#
# This unpublished material is the property of the Georgia Tech
# Research Institute and is protected under copyright law.
# The methods and techniques described herein are considered
# trade secrets and/or confidential. Reproduction or distribution,
# in whole or in part, is forbidden except by the express written
# permission of the Georgia Tech Research Institute.
#****************************************************************/
import argparse
from bedrock.core.opals import manage_opals

if __name__=='__main__':
    parser = argparse.ArgumentParser(description="Manually configure system's enabled/disabled modules")
    parser.add_argument('mode', action='store', choices=['add','remove','reload'], \
      help="Action to perform (add, remove, reload)", \
      metavar='action')
    parser.add_argument('api', action='store', metavar='api', \
      choices=['ingest','filters','analtyics','visualization'], \
      help="The API that the Opal inherits from.  See docs for interface spec of API base classes.")
    parser.add_argument('modulename', action='store',  \
      help="The fully qualified class name for the Opal (with the full module specification)", \
      metavar='classname')

    args = parser.parse_args()

    manage_opals(args.mode, args.api, args.modulename)
